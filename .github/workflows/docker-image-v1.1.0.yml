
# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: docker-image-v1.1.0

on:
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.17]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    # - uses: actions/checkout@v3
    # - name: Use Node.js ${{ matrix.node-version }}
    #   uses: actions/setup-node@v3
    #   with:
    #     node-version: ${{ matrix.node-version }}
    #     cache: 'npm'
        
    # - run: npm ci
    # - run: rm .env.dev
    # - run: npm run build --if-present
    # - run: ls -lrt

    - uses: actions/checkout@v3
    - name: Use Node.js Build
      uses: actions/setup-node@v3
      with:
        node-version: 18.17.0
    - name: Cache pnpm modules
      uses: actions/cache@v3
      with:
        path: ~/.pnpm-store
        key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-
    - run: npm install -g pnpm@8.15.5
    - run: pnpm i
    - name: Build with increased memory limit
      run: pnpm build:4096
      env:
        CI: true
    - run: ls -lrt
    #- name: Clone Vue codebase
    #  run: git clone https://github.com/ThingsPanel/visual-editor.git

    #- run: cd visual-editor
    #- run: npm install -g pnpm
    
    #- name: Build V
    #  run: |
    #   pnpm install --frozen-lockfile
    #   pnpm run build
    #  working-directory: ./visual-editor
        
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
      
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: thingspanel/thingspanel-vue:v1.1.0
        
    - name: Login to Aliyuncs Docker Hub
      uses: docker/login-action@v2.2.0
      with:
        registry: registry.cn-hangzhou.aliyuncs.com
        username: ${{ secrets.IMAGE_USER }}
        password: ${{ secrets.IMAGE_PASS }}
        logout: false
        
    - name: Use Skopeo Tools Sync Image to Aliyuncs Docker Hub
      run: |
         skopeo copy docker://docker.io/thingspanel/thingspanel-vue:v1.1.0 docker://registry.cn-hangzhou.aliyuncs.com/thingspanel/thingspanel-vue:v1.1.0
